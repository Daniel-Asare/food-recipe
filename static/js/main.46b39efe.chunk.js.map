{"version":3,"sources":["Alert.js","App.js","index.js"],"names":["AlertMessage","styled","div","Alert","alert","RecipeContainer","section","Form","form","Input","input","Button","button","RecipeBody","RecipeItem","article","RecipeImg","img","attrs","p","src","IngredientName","App","useState","undefined","menuItem","setMenuItem","search","setSearch","setAlert","query","setQuery","URL","getData","a","fetch","response","json","data","meals","console","log","useEffect","onSubmit","e","preventDefault","type","value","placeholder","autoComplete","onChange","target","map","item","idMeal","strMeal","strMealThumb","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGMA,EAAeC,IAAOC,IAAV,8MAoBHC,I,gBAAAA,EARf,YAAyB,IAATC,EAAQ,EAARA,MACd,OACE,cAACJ,EAAD,UACE,4BAAII,OCfJC,EAAkBJ,IAAOK,QAAV,iFAMfC,EAAON,IAAOO,KAAV,gGAOJC,EAAQR,IAAOS,MAAV,6PAiBLC,EAASV,IAAOW,OAAV,4LAcNC,EAAaZ,IAAOC,IAAV,sSAkBVY,EAAab,IAAOc,QAAV,6EAKVC,EAAYf,IAAOgB,IAAIC,OAAM,SAACC,GAAD,MAAM,CACvCC,IAAID,EAAEC,OADUnB,CAAH,oGASToB,EAAiBpB,IAAOC,IAAV,8JAuFLoB,MA5Ef,WACE,MAA+BC,wBAASC,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA2BH,mBAAS,IAApC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAyBL,mBAAS,IAAlC,mBAAOnB,EAAP,KAAayB,EAAb,KACA,EAAyBN,mBAAS,WAAlC,mBAAOO,EAAP,KAAaC,EAAb,KAEMC,EAAG,+DAA2DF,GAE9DG,EAAO,uCAAE,WAAMD,GAAN,iBAAAE,EAAA,sEACYC,MAAMH,GADlB,cACLI,EADK,gBAEQA,EAASC,OAFjB,OAELC,EAFK,OAGXZ,EAAYY,EAAKC,OACjBC,QAAQC,IAAIH,EAAKC,OAJN,2CAAF,sDAiCb,OAzBEG,qBAAU,WACRT,EAAQD,KACR,CAACF,EAAME,IASXU,qBAAU,WAOPb,EALEJ,EAKO,GAHA,sBAKV,CAACA,IAMD,mCACA,eAACpB,EAAD,WACE,iDACW,KAAVD,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,eAACG,EAAD,CAAMoC,SAxBO,SAACC,GACdA,EAAEC,iBACDd,EAASJ,GACVC,EAAU,KAqBV,UACE,cAACnB,EAAD,CAAOqC,KAAK,OACZC,MAAOpB,EACPqB,YAAY,WAAWC,aAAa,MACpCC,SAAU,SAACN,GAAD,OAAKhB,EAAUgB,EAAEO,OAAOJ,UAElC,cAACpC,EAAD,CAAQmC,KAAK,SAAb,uBAEC,cAACjC,EAAD,iBACEY,QADF,IACEA,OADF,EACEA,EAAU2B,KAAI,SAAAC,GACb,IAAOC,EAA+BD,EAA/BC,OAAOC,EAAwBF,EAAxBE,QAAQC,EAAgBH,EAAhBG,aACtB,OACC,eAAC1C,EAAD,WACE,cAACE,EAAD,CAAWI,IAAKoC,IAChB,cAACnC,EAAD,UACA,4BAAIkC,QAHWD,cC9I9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46b39efe.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst AlertMessage = styled.div`\r\nwidth: 40%;\r\nmargin: 0 auto -20px auto;\r\nmax-width:400px;\r\nbackground:#f57362;\r\npadding: 0 2px 0 2px;\r\ncolor: white;\r\nfont-size: 1rem;\r\ntext-align: center;\r\nborder-radius: 4px;\r\n`;\r\n\r\nfunction Alert({alert}) {\r\n  return (\r\n    <AlertMessage>\r\n      <p>{alert}</p>\r\n    </AlertMessage>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Alert from 'Alert';\nconst RecipeContainer = styled.section`\ntext-align: center;\nfont-size: 1.7em;\nwidth:100%;\n`;\n\nconst Form = styled.form`\nmargin: 2em auto;\nwidth: 100%;\nmax-width: 400px;\ndisplay: flex;\n`;\n\nconst Input = styled.input`\nheight: 25px;\nwidth: 100%;\nborder-radius: 4px;\nmargin-right: 0.2rem;\nborder: 3px solid #d1cfcf;\n\n&:focus{\n  border:3px solid #bdbbbb ;\n}\n\n&::-webkit-input-placeholder{\nfont-style: italic;\nfont-size: 0.888rem;\n}\n`;\n\nconst Button = styled.button`\nwidth:40%;\ncursor: pointer;\nfont-size: 1rem;\nbackground: #f57362;\ncolor: white;\nborder-radius: 4px;\nborder: none;\n\n&:hover{\n  background: #f03e26;\n}\n`;\n\nconst RecipeBody = styled.div`\nwidth: 80%;\nmargin: 2rem auto;\ndisplay: grid;\ngap: 2rem;\ngrid-template-columns: repeat(autofil,minmax(400px,1fr)) ;\n\n\n@media(min-width:760px){\ngrid-template-columns: repeat(2,1fr);\n}\n\n@media(min-width:1200px){\ngrid-template-columns: repeat(3,1fr);\n}\n\n`;\n\nconst RecipeItem = styled.article`\nborder: 3px solid #bdbbbb;\nborder-radius: 4px;\n`;\n\nconst RecipeImg = styled.img.attrs((p)=>({\n  src:p.src\n}))`\nwidth:100%;\nheight:250px;\ndisplay: inline-block;\nobject-fit: cover;\n`;\n\nconst IngredientName = styled.div`\nwidth:100%;\nletter-spacing: 0.1rem;\nbackground: #f57362 ;\ntext-align: center;\ncolor:white;\nmargin:0 auto;\nfont-size:1.5rem\n`;\n\n\nfunction App() {\n  const [menuItem,setMenuItem] = useState(undefined)\n  const [search,setSearch] = useState('')\n  const [alert,setAlert] = useState('')\n  const [query,setQuery] = useState('chicken')\n\n  const URL = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${query}`\n\n  const getData= async(URL)=> { \n      const response = await fetch(URL)\n      const data = await response.json()\n      setMenuItem(data.meals);   \n      console.log(data.meals);\n\n  }\n    \n    useEffect(()=>{\n      getData(URL)   \n    },[query,URL])\n\n\n    \n    const submit = (e)=>{\n      e.preventDefault();\n       setQuery(search)   \n      setSearch('')\n   } \n  useEffect(()=>{\n\n   if(!menuItem){\n     \n     setAlert(\"No Search result\")\n    \n   }else{\n     setAlert('')\n   }\n  },[menuItem])\n   \n\n\n\n  return (\n    <>\n    <RecipeContainer>\n      <h1>Food Recipe App</h1>\n      {alert !== \"\" && <Alert alert={alert}/>}\n      <Form onSubmit={submit}>\n        <Input type=\"text\" \n        value={search}\n        placeholder=\"Eg. beef\" autoComplete=\"off\"\n        onChange={(e)=>setSearch(e.target.value)}\n        />\n        <Button type=\"submit\">Search</Button>\n        </Form>\n         <RecipeBody>\n          {menuItem?.map(item=>{\n            const {idMeal,strMeal,strMealThumb} = item;\n            return(\n             <RecipeItem key={idMeal}>\n               <RecipeImg src={strMealThumb}/>\n               <IngredientName>\n               <p>{strMeal}</p>\n               </IngredientName>\n    \n\n             </RecipeItem>\n            )\n          })} \n        </RecipeBody>\n        \n    </RecipeContainer>\n    </>\n  );\n}\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}